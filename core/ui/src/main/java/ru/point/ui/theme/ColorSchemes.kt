package ru.point.ui.theme

import androidx.compose.material3.darkColorScheme
import androidx.compose.material3.lightColorScheme
import androidx.compose.runtime.Immutable

@Immutable
sealed interface AppColorScheme {

    data object GreenColorScheme : AppColorScheme {
        val greenLight = lightColorScheme(
            primary = primaryLightGreen,
            onPrimary = onPrimaryLightGreen,
            primaryContainer = primaryContainerLightGreen,
            onPrimaryContainer = onPrimaryContainerLightGreen,
            secondary = secondaryLightGreen,
            onSecondary = onSecondaryLightGreen,
            secondaryContainer = secondaryContainerLightGreen,
            onSecondaryContainer = onSecondaryContainerLightGreen,
            inversePrimary = inversePrimaryLightGreen,
            tertiary = tertiaryLightGreen,
            onTertiary = onTertiaryLightGreen,
            tertiaryContainer = tertiaryContainerLightGreen,
            onTertiaryContainer = onTertiaryContainerLightGreen,
            error = errorLightGreen,
            onError = onErrorLightGreen,
            errorContainer = errorContainerLightGreen,
            onErrorContainer = onErrorContainerLightGreen,
            background = backgroundLightGreen,
            onBackground = onBackgroundLightGreen,
            surface = surfaceLightGreen,
            onSurface = onSurfaceLightGreen,
            surfaceVariant = surfaceVariantLightGreen,
            onSurfaceVariant = onSurfaceVariantLightGreen,
            outline = outlineLightGreen,
            outlineVariant = outlineVariantLightGreen,
            scrim = scrimLightGreen,
            inverseSurface = inverseSurfaceLightGreen,
            inverseOnSurface = inverseOnSurfaceLightGreen,
            surfaceDim = surfaceDimLightGreen,
            surfaceBright = surfaceBrightLightGreen,
            surfaceContainerLowest = surfaceContainerLowestLightGreen,
            surfaceContainerLow = surfaceContainerLowLightGreen,
            surfaceContainer = surfaceContainerLightGreen,
            surfaceContainerHigh = surfaceContainerHighLightGreen,
            surfaceContainerHighest = surfaceContainerHighestLightGreen,
        )

        val greenDark = darkColorScheme(
            primary = primaryDarkGreen,
            onPrimary = onPrimaryDarkGreen,
            primaryContainer = primaryContainerDarkGreen,
            onPrimaryContainer = onPrimaryContainerDarkGreen,
            secondary = secondaryDarkGreen,
            onSecondary = onSecondaryDarkGreen,
            secondaryContainer = secondaryContainerDarkGreen,
            onSecondaryContainer = onSecondaryContainerDarkGreen,
            inversePrimary = inversePrimaryDarkGreen,
            tertiary = tertiaryDarkGreen,
            onTertiary = onTertiaryDarkGreen,
            tertiaryContainer = tertiaryContainerDarkGreen,
            onTertiaryContainer = onTertiaryContainerDarkGreen,
            error = errorDarkGreen,
            onError = onErrorDarkGreen,
            errorContainer = errorContainerDarkGreen,
            onErrorContainer = onErrorContainerDarkGreen,
            background = backgroundDarkGreen,
            onBackground = onBackgroundDarkGreen,
            surface = surfaceDarkGreen,
            onSurface = onSurfaceDarkGreen,
            surfaceVariant = surfaceVariantDarkGreen,
            onSurfaceVariant = onSurfaceVariantDarkGreen,
            outline = outlineDarkGreen,
            outlineVariant = outlineVariantDarkGreen,
            scrim = scrimDarkGreen,
            inverseSurface = inverseSurfaceDarkGreen,
            inverseOnSurface = inverseOnSurfaceDarkGreen,
            surfaceDim = surfaceDimDarkGreen,
            surfaceBright = surfaceBrightDarkGreen,
            surfaceContainerLowest = surfaceContainerLowestDarkGreen,
            surfaceContainerLow = surfaceContainerLowDarkGreen,
            surfaceContainer = surfaceContainerDarkGreen,
            surfaceContainerHigh = surfaceContainerHighDarkGreen,
            surfaceContainerHighest = surfaceContainerHighestDarkGreen,
        )
    }

    data object PurpleColorScheme : AppColorScheme {
        val purpleLight = lightColorScheme(
            primary = primaryLightPurple,
            onPrimary = onPrimaryLightPurple,
            primaryContainer = primaryContainerLightPurple,
            onPrimaryContainer = onPrimaryContainerLightPurple,
            secondary = secondaryLightPurple,
            onSecondary = onSecondaryLightPurple,
            secondaryContainer = secondaryContainerLightPurple,
            onSecondaryContainer = onSecondaryContainerLightPurple,
            tertiary = tertiaryLightPurple,
            onTertiary = onTertiaryLightPurple,
            tertiaryContainer = tertiaryContainerLightPurple,
            onTertiaryContainer = onTertiaryContainerLightPurple,
            error = errorLightPurple,
            onError = onErrorLightPurple,
            errorContainer = errorContainerLightPurple,
            onErrorContainer = onErrorContainerLightPurple,
            background = backgroundLightPurple,
            onBackground = onBackgroundLightPurple,
            surface = surfaceLightPurple,
            onSurface = onSurfaceLightPurple,
            surfaceVariant = surfaceVariantLightPurple,
            onSurfaceVariant = onSurfaceVariantLightPurple,
            outline = outlineLightPurple,
            outlineVariant = outlineVariantLightPurple,
            scrim = scrimLightPurple,
            inverseSurface = inverseSurfaceLightPurple,
            inverseOnSurface = inverseOnSurfaceLightPurple,
            inversePrimary = inversePrimaryLightPurple,
            surfaceDim = surfaceDimLightPurple,
            surfaceBright = surfaceBrightLightPurple,
            surfaceContainerLowest = surfaceContainerLowestLightPurple,
            surfaceContainerLow = surfaceContainerLowLightPurple,
            surfaceContainer = surfaceContainerLightPurple,
            surfaceContainerHigh = surfaceContainerHighLightPurple,
            surfaceContainerHighest = surfaceContainerHighestLightPurple,
        )

        val purpleDark = darkColorScheme(
            primary = primaryDarkPurple,
            onPrimary = onPrimaryDarkPurple,
            primaryContainer = primaryContainerDarkPurple,
            onPrimaryContainer = onPrimaryContainerDarkPurple,
            secondary = secondaryDarkPurple,
            onSecondary = onSecondaryDarkPurple,
            secondaryContainer = secondaryContainerDarkPurple,
            onSecondaryContainer = onSecondaryContainerDarkPurple,
            tertiary = tertiaryDarkPurple,
            onTertiary = onTertiaryDarkPurple,
            tertiaryContainer = tertiaryContainerDarkPurple,
            onTertiaryContainer = onTertiaryContainerDarkPurple,
            error = errorDarkPurple,
            onError = onErrorDarkPurple,
            errorContainer = errorContainerDarkPurple,
            onErrorContainer = onErrorContainerDarkPurple,
            background = backgroundDarkPurple,
            onBackground = onBackgroundDarkPurple,
            surface = surfaceDarkPurple,
            onSurface = onSurfaceDarkPurple,
            surfaceVariant = surfaceVariantDarkPurple,
            onSurfaceVariant = onSurfaceVariantDarkPurple,
            outline = outlineDarkPurple,
            outlineVariant = outlineVariantDarkPurple,
            scrim = scrimDarkPurple,
            inverseSurface = inverseSurfaceDarkPurple,
            inverseOnSurface = inverseOnSurfaceDarkPurple,
            inversePrimary = inversePrimaryDarkPurple,
            surfaceDim = surfaceDimDarkPurple,
            surfaceBright = surfaceBrightDarkPurple,
            surfaceContainerLowest = surfaceContainerLowestDarkPurple,
            surfaceContainerLow = surfaceContainerLowDarkPurple,
            surfaceContainer = surfaceContainerDarkPurple,
            surfaceContainerHigh = surfaceContainerHighDarkPurple,
            surfaceContainerHighest = surfaceContainerHighestDarkPurple,
        )
    }

    data object BlueColorScheme : AppColorScheme {
        val blueLight = lightColorScheme(
            primary = primaryLightBlue,
            onPrimary = onPrimaryLightBlue,
            primaryContainer = primaryContainerLightBlue,
            onPrimaryContainer = onPrimaryContainerLightBlue,
            secondary = secondaryLightBlue,
            onSecondary = onSecondaryLightBlue,
            secondaryContainer = secondaryContainerLightBlue,
            onSecondaryContainer = onSecondaryContainerLightBlue,
            inversePrimary = inversePrimaryLightBlue,
            tertiary = tertiaryLightBlue,
            onTertiary = onTertiaryLightBlue,
            tertiaryContainer = tertiaryContainerLightBlue,
            onTertiaryContainer = onTertiaryContainerLightBlue,
            error = errorLightBlue,
            onError = onErrorLightBlue,
            errorContainer = errorContainerLightBlue,
            onErrorContainer = onErrorContainerLightBlue,
            background = backgroundLightBlue,
            onBackground = onBackgroundLightBlue,
            surface = surfaceLightBlue,
            onSurface = onSurfaceLightBlue,
            surfaceVariant = surfaceVariantLightBlue,
            onSurfaceVariant = onSurfaceVariantLightBlue,
            outline = outlineLightBlue,
            outlineVariant = outlineVariantLightBlue,
            scrim = scrimLightBlue,
            inverseSurface = inverseSurfaceLightBlue,
            inverseOnSurface = inverseOnSurfaceLightBlue,
            surfaceDim = surfaceDimLightBlue,
            surfaceBright = surfaceBrightLightBlue,
            surfaceContainerLowest = surfaceContainerLowestLightBlue,
            surfaceContainerLow = surfaceContainerLowLightBlue,
            surfaceContainer = surfaceContainerLightBlue,
            surfaceContainerHigh = surfaceContainerHighLightBlue,
            surfaceContainerHighest = surfaceContainerHighestLightBlue,
        )

        val blueDark = darkColorScheme(
            primary = primaryDarkBlue,
            onPrimary = onPrimaryDarkBlue,
            primaryContainer = primaryContainerDarkBlue,
            onPrimaryContainer = onPrimaryContainerDarkBlue,
            secondary = secondaryDarkBlue,
            onSecondary = onSecondaryDarkBlue,
            secondaryContainer = secondaryContainerDarkBlue,
            onSecondaryContainer = onSecondaryContainerDarkBlue,
            inversePrimary = inversePrimaryDarkBlue,
            tertiary = tertiaryDarkBlue,
            onTertiary = onTertiaryDarkBlue,
            tertiaryContainer = tertiaryContainerDarkBlue,
            onTertiaryContainer = onTertiaryContainerDarkBlue,
            error = errorDarkBlue,
            onError = onErrorDarkBlue,
            errorContainer = errorContainerDarkBlue,
            onErrorContainer = onErrorContainerDarkBlue,
            background = backgroundDarkBlue,
            onBackground = onBackgroundDarkBlue,
            surface = surfaceDarkBlue,
            onSurface = onSurfaceDarkBlue,
            surfaceVariant = surfaceVariantDarkBlue,
            onSurfaceVariant = onSurfaceVariantDarkBlue,
            outline = outlineDarkBlue,
            outlineVariant = outlineVariantDarkBlue,
            scrim = scrimDarkBlue,
            inverseSurface = inverseSurfaceDarkBlue,
            inverseOnSurface = inverseOnSurfaceDarkBlue,
            surfaceDim = surfaceDimDarkBlue,
            surfaceBright = surfaceBrightDarkBlue,
            surfaceContainerLowest = surfaceContainerLowestDarkBlue,
            surfaceContainerLow = surfaceContainerLowDarkBlue,
            surfaceContainer = surfaceContainerDarkBlue,
            surfaceContainerHigh = surfaceContainerHighDarkBlue,
            surfaceContainerHighest = surfaceContainerHighestDarkBlue,
        )
    }

    data object RedColorScheme : AppColorScheme {
        val redLight = lightColorScheme(
            primary = primaryLightRed,
            onPrimary = onPrimaryLightRed,
            primaryContainer = primaryContainerLightRed,
            onPrimaryContainer = onPrimaryContainerLightRed,
            secondary = secondaryLightRed,
            onSecondary = onSecondaryLightRed,
            secondaryContainer = secondaryContainerLightRed,
            onSecondaryContainer = onSecondaryContainerLightRed,
            inversePrimary = inversePrimaryLightRed,
            tertiary = tertiaryLightRed,
            onTertiary = onTertiaryLightRed,
            tertiaryContainer = tertiaryContainerLightRed,
            onTertiaryContainer = onTertiaryContainerLightRed,
            error = errorLightRed,
            onError = onErrorLightRed,
            errorContainer = errorContainerLightRed,
            onErrorContainer = onErrorContainerLightRed,
            background = backgroundLightRed,
            onBackground = onBackgroundLightRed,
            surface = surfaceLightRed,
            onSurface = onSurfaceLightRed,
            surfaceVariant = surfaceVariantLightRed,
            onSurfaceVariant = onSurfaceVariantLightRed,
            outline = outlineLightRed,
            outlineVariant = outlineVariantLightRed,
            scrim = scrimLightRed,
            inverseSurface = inverseSurfaceLightRed,
            inverseOnSurface = inverseOnSurfaceLightRed,
            surfaceDim = surfaceDimLightRed,
            surfaceBright = surfaceBrightLightRed,
            surfaceContainerLowest = surfaceContainerLowestLightRed,
            surfaceContainerLow = surfaceContainerLowLightRed,
            surfaceContainer = surfaceContainerLightRed,
            surfaceContainerHigh = surfaceContainerHighLightRed,
            surfaceContainerHighest = surfaceContainerHighestLightRed,
        )

        val redDark = darkColorScheme(
            primary = primaryDarkRed,
            onPrimary = onPrimaryDarkRed,
            primaryContainer = primaryContainerDarkRed,
            onPrimaryContainer = onPrimaryContainerDarkRed,
            secondary = secondaryDarkRed,
            onSecondary = onSecondaryDarkRed,
            secondaryContainer = secondaryContainerDarkRed,
            onSecondaryContainer = onSecondaryContainerDarkRed,
            inversePrimary = inversePrimaryDarkRed,
            tertiary = tertiaryDarkRed,
            onTertiary = onTertiaryDarkRed,
            tertiaryContainer = tertiaryContainerDarkRed,
            onTertiaryContainer = onTertiaryContainerDarkRed,
            error = errorDarkRed,
            onError = onErrorDarkRed,
            errorContainer = errorContainerDarkRed,
            onErrorContainer = onErrorContainerDarkRed,
            background = backgroundDarkRed,
            onBackground = onBackgroundDarkRed,
            surface = surfaceDarkRed,
            onSurface = onSurfaceDarkRed,
            surfaceVariant = surfaceVariantDarkRed,
            onSurfaceVariant = onSurfaceVariantDarkRed,
            outline = outlineDarkRed,
            outlineVariant = outlineVariantDarkRed,
            scrim = scrimDarkRed,
            inverseSurface = inverseSurfaceDarkRed,
            inverseOnSurface = inverseOnSurfaceDarkRed,
            surfaceDim = surfaceDimDarkRed,
            surfaceBright = surfaceBrightDarkRed,
            surfaceContainerLowest = surfaceContainerLowestDarkRed,
            surfaceContainerLow = surfaceContainerLowDarkRed,
            surfaceContainer = surfaceContainerDarkRed,
            surfaceContainerHigh = surfaceContainerHighDarkRed,
            surfaceContainerHighest = surfaceContainerHighestDarkRed,
        )
    }

    data object YellowColorScheme : AppColorScheme {
        val yellowLight = lightColorScheme(
            primary = primaryLightYellow,
            onPrimary = onPrimaryLightYellow,
            primaryContainer = primaryContainerLightYellow,
            onPrimaryContainer = onPrimaryContainerLightYellow,
            secondary = secondaryLightYellow,
            onSecondary = onSecondaryLightYellow,
            secondaryContainer = secondaryContainerLightYellow,
            onSecondaryContainer = onSecondaryContainerLightYellow,
            inversePrimary = inversePrimaryLightYellow,
            tertiary = tertiaryLightYellow,
            onTertiary = onTertiaryLightYellow,
            tertiaryContainer = tertiaryContainerLightYellow,
            onTertiaryContainer = onTertiaryContainerLightYellow,
            error = errorLightYellow,
            onError = onErrorLightYellow,
            errorContainer = errorContainerLightYellow,
            onErrorContainer = onErrorContainerLightYellow,
            background = backgroundLightYellow,
            onBackground = onBackgroundLightYellow,
            surface = surfaceLightYellow,
            onSurface = onSurfaceLightYellow,
            surfaceVariant = surfaceVariantLightYellow,
            onSurfaceVariant = onSurfaceVariantLightYellow,
            outline = outlineLightYellow,
            outlineVariant = outlineVariantLightYellow,
            scrim = scrimLightYellow,
            inverseSurface = inverseSurfaceLightYellow,
            inverseOnSurface = inverseOnSurfaceLightYellow,
            surfaceDim = surfaceDimLightYellow,
            surfaceBright = surfaceBrightLightYellow,
            surfaceContainerLowest = surfaceContainerLowestLightYellow,
            surfaceContainerLow = surfaceContainerLowLightYellow,
            surfaceContainer = surfaceContainerLightYellow,
            surfaceContainerHigh = surfaceContainerHighLightYellow,
            surfaceContainerHighest = surfaceContainerHighestLightYellow,
        )

        val yellowDark = darkColorScheme(
            primary = primaryDarkYellow,
            onPrimary = onPrimaryDarkYellow,
            primaryContainer = primaryContainerDarkYellow,
            onPrimaryContainer = onPrimaryContainerDarkYellow,
            secondary = secondaryDarkYellow,
            onSecondary = onSecondaryDarkYellow,
            secondaryContainer = secondaryContainerDarkYellow,
            onSecondaryContainer = onSecondaryContainerDarkYellow,
            inversePrimary = inversePrimaryDarkYellow,
            tertiary = tertiaryDarkYellow,
            onTertiary = onTertiaryDarkYellow,
            tertiaryContainer = tertiaryContainerDarkYellow,
            onTertiaryContainer = onTertiaryContainerDarkYellow,
            error = errorDarkYellow,
            onError = onErrorDarkYellow,
            errorContainer = errorContainerDarkYellow,
            onErrorContainer = onErrorContainerDarkYellow,
            background = backgroundDarkYellow,
            onBackground = onBackgroundDarkYellow,
            surface = surfaceDarkYellow,
            onSurface = onSurfaceDarkYellow,
            surfaceVariant = surfaceVariantDarkYellow,
            onSurfaceVariant = onSurfaceVariantDarkYellow,
            outline = outlineDarkYellow,
            outlineVariant = outlineVariantDarkYellow,
            scrim = scrimDarkYellow,
            inverseSurface = inverseSurfaceDarkYellow,
            inverseOnSurface = inverseOnSurfaceDarkYellow,
            surfaceDim = surfaceDimDarkYellow,
            surfaceBright = surfaceBrightDarkYellow,
            surfaceContainerLowest = surfaceContainerLowestDarkYellow,
            surfaceContainerLow = surfaceContainerLowDarkYellow,
            surfaceContainer = surfaceContainerDarkYellow,
            surfaceContainerHigh = surfaceContainerHighDarkYellow,
            surfaceContainerHighest = surfaceContainerHighestDarkYellow,
        )
    }
}